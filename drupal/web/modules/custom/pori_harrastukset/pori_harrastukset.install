<?php

/**
 * Write a line or two here about what the updates are for.
 * This is shown to users on the update.php page.
 */
function pori_harrastukset_update_8001(&$sandbox) {
    _module_change_text_field_max_length('node', 'field_text', 300);
}

/**
 * Update the length of a text field which already contains data.
 *
 * @param string $entity_type_id
 * @param string $field_name
 * @param integer $new_length
 */
function _module_change_text_field_max_length ($entity_type_id, $field_name, $new_length) {
    $name = 'field.storage.' . $entity_type_id . "." . $field_name;
  
    // Get the current settings
    $result = \Drupal::database()->query(
      'SELECT data FROM {config} WHERE name = :name',
      [':name' => $name]
    )->fetchField();
    $data = unserialize($result);
    $data['settings']['max_length'] = $new_length;
  
    // Write settings back to the database.
    \Drupal::database()->update('config')
      ->fields(['data' => serialize($data)])
      ->condition('name', $name)
      ->execute();
  
    // Update the value column in both the _data and _revision tables for the field
    $table = $entity_type_id . "__" . $field_name;
    $table_revision = $entity_type_id . "_revision__" . $field_name;
    $new_field = ['type' => 'varchar', 'length' => $new_length];
    $col_name = $field_name . '_value';
    \Drupal::database()->schema()->changeField($table, $col_name, $col_name, $new_field);
    \Drupal::database()->schema()->changeField($table_revision, $col_name, $col_name, $new_field);
  
    // Flush the caches.
    drupal_flush_all_caches();
  }
  