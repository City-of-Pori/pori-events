html {
  font-family: sans-serif;
  -ms-text-size-adjust: 100%;
  -webkit-text-size-adjust: 100%;
}

body {
  margin: 0;
}

article,
aside,
details,
figcaption,
figure,
footer,
header,
hgroup,
main,
menu,
nav,
section,
summary {
  display: block;
}

audio,
canvas,
progress,
video {
  display: inline-block;
  vertical-align: baseline;
}

audio:not([controls]) {
  display: none;
  height: 0;
}

[hidden],
template {
  display: none;
}

a {
  background-color: transparent;
}

a:active,
a:hover {
  outline: 0;
}

abbr[title] {
  border-bottom: 1px dotted;
}

b,
strong {
  font-weight: bold;
}

dfn {
  font-style: italic;
}

h1 {
  font-size: 2em;
  margin: 0.67em 0;
}

mark {
  background: #ff0;
  color: #000;
}

small {
  font-size: 80%;
}

sub,
sup {
  font-size: 75%;
  line-height: 0;
  position: relative;
  vertical-align: baseline;
}

sup {
  top: -0.5em;
}

sub {
  bottom: -0.25em;
}

img {
  border: 0;
}

svg:not(:root) {
  overflow: hidden;
}

figure {
  margin: 1em 40px;
}

hr {
  box-sizing: content-box;
  height: 0;
}

pre {
  overflow: auto;
}

code,
kbd,
pre,
samp {
  font-family: monospace, monospace;
  font-size: 1em;
}

button,
input,
optgroup,
select,
textarea {
  color: inherit;
  font: inherit;
  margin: 0;
}

button {
  overflow: visible;
}

button,
select {
  text-transform: none;
}

button,
html input[type="button"],
input[type="reset"],
input[type="submit"] {
  -webkit-appearance: button;
  cursor: pointer;
}

button[disabled],
html input[disabled] {
  cursor: default;
}

button::-moz-focus-inner,
input::-moz-focus-inner {
  border: 0;
  padding: 0;
}

input {
  line-height: normal;
}

input[type="checkbox"],
input[type="radio"] {
  box-sizing: border-box;
  padding: 0;
}

input[type="number"]::-webkit-inner-spin-button,
input[type="number"]::-webkit-outer-spin-button {
  height: auto;
}

input[type="search"] {
  -webkit-appearance: textfield;
  box-sizing: content-box;
}

input[type="search"]::-webkit-search-cancel-button,
input[type="search"]::-webkit-search-decoration {
  -webkit-appearance: none;
}

fieldset {
  border: 1px solid #c0c0c0;
  margin: 0 2px;
  padding: 0.35em 0.625em 0.75em;
}

legend {
  border: 0;
  padding: 0;
}

textarea {
  overflow: auto;
}

optgroup {
  font-weight: bold;
}

table {
  border-collapse: collapse;
  border-spacing: 0;
}

td,
th {
  padding: 0;
}

@font-face {
  font-family: BergenMono;
  font-style: normal;
  font-weight: 300;
  src: url("../../dist/fonts/bergen-mono.otf");
}

@font-face {
  font-family: BergenMono;
  font-weight: 600;
  src: url("../../dist/fonts/bergen-mono-bold.otf");
}

@font-face {
  font-family: BergenText;
  font-style: normal;
  font-weight: 300;
  src: url("../../dist/fonts/bergen-text.otf");
}

@font-face {
  font-family: BergenText;
  font-weight: 600;
  src: url("../../dist/fonts/bergen-text-bold.otf");
}

*,
*:after,
*:before {
  box-sizing: inherit;
}

html {
  box-sizing: border-box;
}

html,
html a {
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
  -moz-font-smoothing: antialiased;
  -ms-font-smoothing: antialiased;
  font-smoothing: antialiased;
}

.menu,
ul,
ol,
dl {
  margin: 0;
  padding: 0;
}

html {
  font-size: 100%;
}

body {
  background: #fff;
  color: #1e1e1e;
  margin: 0;
  padding: 0;
}

img {
  height: auto;
  max-width: 100%;
}

body {
  font-size: 1.125rem;
  font-family: "BergenText", Helvetica, Arial, sans-serif;
  line-height: 1.556;
}

@media screen and (max-width: 599px) {
  body {
    font-size: 0.875rem;
  }
}

a {
  color: #009bea;
  text-decoration: none;
  transition: all 150ms linear;
}

a:hover, a:focus {
  color: #005eb8;
}

strong {
  font-weight: 700;
}

small {
  font-size: 80%;
}

h1,
h2,
h3,
h4,
h5 {
  font-family: "BergenMono", "Lucida Console", Monaco, monospace;
  margin-top: 0;
  text-transform: uppercase;
}

h1 a,
h2 a,
h3 a,
h4 a,
h5 a {
  color: inherit;
  font-weight: inherit;
  text-decoration: none;
}

h1 {
  font-size: 3rem;
  line-height: 1.1666;
  margin-bottom: 3.15rem;
}

@media screen and (max-width: 599px) {
  h1 {
    font-size: 1.3rem;
    margin-bottom: 2.15rem;
  }
}

@media screen and (min-width: 600px) and (max-width: 1024px) {
  h1 {
    font-size: 1.8rem;
  }
}

h2 {
  font-size: 2.15rem;
  font-weight: 600;
  line-height: 1.1111;
  margin-bottom: 1.875rem;
}

@media screen and (max-width: 599px) {
  h2 {
    font-size: 1.1rem;
    margin-bottom: 1.5rem;
  }
}

@media screen and (min-width: 600px) and (max-width: 1024px) {
  h2 {
    font-size: 1.5rem;
  }
}

h3 {
  font-size: 1.4rem;
  line-height: 1.25;
  margin-bottom: 1.875rem;
}

@media screen and (max-width: 599px) {
  h3 {
    font-size: 1rem;
    margin-bottom: 1.3rem;
  }
}

@media screen and (min-width: 600px) and (max-width: 1024px) {
  h3 {
    font-size: 1.1rem;
  }
}

h4 {
  font-size: 1.4rem;
  line-height: 1.5;
  margin-bottom: 1.875rem;
  text-transform: none;
}

@media screen and (max-width: 599px) {
  h4 {
    font-size: 1rem;
    margin-bottom: 1.3rem;
  }
}

@media screen and (min-width: 600px) and (max-width: 1024px) {
  h4 {
    font-size: 1.1rem;
  }
}

h5 {
  font-size: 1.125rem;
  line-height: 1.556;
  margin-bottom: 1.875rem;
  text-transform: none;
}

@media screen and (max-width: 599px) {
  h5 {
    font-size: 0.875rem;
  }
}

p {
  margin-bottom: 1.875rem;
  margin-top: 0;
}

p + h2,
ul + h2,
ol + h2 {
  margin-top: 3.15rem;
}

p + h3,
ul + h3,
ol + h3 {
  margin-top: 3rem;
}

@media screen and (max-width: 599px) {
  p + h3,
  ul + h3,
  ol + h3 {
    margin-top: 2rem;
  }
}

p + h4,
ul + h4,
ol + h4 {
  margin-top: 3rem;
}

@media screen and (max-width: 599px) {
  p + h4,
  ul + h4,
  ol + h4 {
    margin-top: 2rem;
  }
}

ul li,
ol li {
  margin-top: .275rem;
}

ul li:first-child,
ol li:first-child {
  margin-top: 0;
}

ul ul,
ul ol,
ol ul,
ol ol {
  margin-top: .625rem;
}

ul + p,
ol + p {
  margin-top: 1rem;
}

ul {
  padding-left: 1.25rem;
}

ol {
  padding-left: 1.275rem;
}

.font-zoom-level--medium {
  font-size: 1.286rem;
}

@media screen and (min-width: 48rem) {
  .font-zoom-level--medium .flexslider {
    font-size: 1.14rem;
  }
}

.font-zoom-level--large {
  font-size: 1.57rem;
}

@media screen and (min-width: 48rem) {
  .font-zoom-level--large .flexslider {
    font-size: 1.286rem;
  }
}

@media screen and (min-width: 75rem) {
  .font-zoom-level--large .flexslider {
    font-size: 1.43rem;
  }
}

.layout-container {
  padding-right: 1.25rem;
  padding-left: 1.25rem;
  margin: 0 auto;
  max-width: 110rem;
}

@media screen and (min-width: 40rem) and (max-width: 75rem) {
  .layout-container {
    padding-right: 2.5rem;
    padding-left: 2.5rem;
  }
}

.page-footer {
  border-top: 0.3rem solid #1e1e1e;
  border-bottom: 0.6rem solid #005EB8;
  margin-top: 1.5rem;
}

.page-footer__top {
  margin-top: 2rem;
  width: 100%;
}

@media screen and (min-width: 37.5rem) {
  .page-footer__top {
    margin-top: 3rem;
  }
}

.page-footer__bottom .footer-block {
  display: -ms-flexbox;
  display: flex;
  -ms-flex-direction: column;
      flex-direction: column;
  -ms-flex-wrap: wrap;
      flex-wrap: wrap;
  font-family: "BergenText", Helvetica, Arial, sans-serif;
  font-size: 1rem;
  -ms-flex-pack: start;
      justify-content: flex-start;
  margin: 1rem 0;
}

@media screen and (min-width: 30rem) {
  .page-footer__bottom .footer-block {
    -ms-flex-direction: row;
        flex-direction: row;
    -ms-flex-pack: justify;
        justify-content: space-between;
  }
}

@media screen and (min-width: 37.5rem) {
  .page-footer__bottom .footer-block {
    -ms-flex-pack: start;
        justify-content: flex-start;
  }
}

.page-footer__bottom .footer-block .footer__item {
  margin: 0 .5rem;
  width: 100%;
}

@media screen and (min-width: 30rem) {
  .page-footer__bottom .footer-block .footer__item {
    margin: 0 1rem;
    max-width: 50%;
    width: auto;
  }
}

@media screen and (min-width: 48rem) {
  .page-footer__bottom .footer-block .footer__item {
    margin: 0 2rem;
    max-width: 25%;
    width: auto;
  }
}

@media screen and (min-width: 48rem) {
  .page-footer__bottom .footer-block .footer__item:first-child {
    margin-right: 1rem;
    margin-left: 0;
  }
}

.page-header {
  border-bottom: 0.3rem solid #1e1e1e;
  margin-bottom: 1.5rem;
}

@media screen and (min-width: 37.5rem) {
  .page-header {
    border: 0;
    margin-bottom: 1rem;
  }
}

.branding__container {
  display: -ms-flexbox;
  display: flex;
  padding: .5rem 0;
}

@media screen and (min-width: 37.5rem) {
  .branding__container {
    padding: 1.5rem 0;
  }
}

.site-slogan {
  display: none;
  font-family: "BergenMono", "Lucida Console", Monaco, monospace;
  font-size: .85rem;
  letter-spacing: -0.5px;
  margin: 0 2rem;
  padding: .5rem 0;
  text-transform: uppercase;
}

@media screen and (min-width: 60rem) {
  .site-slogan {
    display: block;
    width: 70%;
  }
}

.site-slogan a {
  color: #009bea;
}

.site-slogan a:hover {
  color: #005eb8;
}

.site-logo {
  display: block;
  width: 80%;
}

@media screen and (min-width: 60rem) {
  .site-logo {
    width: 30rem;
  }
}

.footer-logo {
  background: url("../../logo.svg") top left no-repeat;
  display: block;
  font-size: 0;
  height: 2.5rem;
  width: auto;
}

@media screen and (min-width: 37.5rem) {
  .footer-logo {
    width: 25rem;
  }
}

@media screen and (min-width: 60rem) {
  .footer-logo {
    width: 33rem;
  }
}

/*# sourceMappingURL=data:application/json;charset=utf8;base64, */
